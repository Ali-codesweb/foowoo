{"ast":null,"code":"import _objectSpread from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,makeStyles,TextField}from'@material-ui/core';import React from'react';import TextFieldComp from'../../components/TextFieldComp';import axios from'axios';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PasswordChange(){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),currentPassword=_React$useState2[0],setCurrentPassword=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),newPassword=_React$useState4[0],setNewPassword=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),newPasswordConfirm=_React$useState6[0],setNewPasswordConfirm=_React$useState6[1];var user=useSelector(function(state){var _state$userReducer,_state$userReducer2,_state$userReducer3,_state$userReducer3$u;return((_state$userReducer=state.userReducer)===null||_state$userReducer===void 0?void 0:_state$userReducer.user)?(_state$userReducer2=state.userReducer)===null||_state$userReducer2===void 0?void 0:_state$userReducer2.user:(_state$userReducer3=state.userReducer)===null||_state$userReducer3===void 0?void 0:(_state$userReducer3$u=_state$userReducer3.user)===null||_state$userReducer3$u===void 0?void 0:_state$userReducer3$u.user;});var URL='https://foowoo1.herokuapp.com';var currentPasswordHandler=function currentPasswordHandler(e){setCurrentPassword(e.target.value);};var newPasswordHandler=function newPasswordHandler(e){setNewPassword(e.target.value);};var newPasswordConfirmHandler=function newPasswordConfirmHandler(e){setNewPasswordConfirm(e.target.value);};var resetPass=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _user$user;var config,_yield$axios$put,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat((user===null||user===void 0?void 0:user.token)?user===null||user===void 0?void 0:user.token:user===null||user===void 0?void 0:(_user$user=user.user)===null||_user$user===void 0?void 0:_user$user.token)}};_context.next=3;return axios.put(\"\".concat(URL,\"/api/restaurant/restaurant-password/update/\"),{current_password:currentPassword,new_password:newPassword},config);case 3:_yield$axios$put=_context.sent;data=_yield$axios$put.data;window.alert(data.message);case 6:case\"end\":return _context.stop();}}},_callee);}));return function resetPass(){return _ref.apply(this,arguments);};}();var updatePassword=function updatePassword(){if(newPassword!=newPasswordConfirm){window.alert('Please confirm passwords properly ');return;}resetPass();};var useStyles=makeStyles(function(theme){return{main:{display:'flex',flexDirection:'column',alignItems:'center'},title:_objectSpread(_objectSpread({},theme.typography.content),{},{textAlign:'center',fontSize:'2.5rem',marginTop:'1rem',marginBottom:'30px'}),label:_objectSpread(_objectSpread({},theme.typography.title),{},{fontSize:'1.5rem'}),btn:_objectSpread({},theme.buttonDef)};});var classes=useStyles();return/*#__PURE__*/_jsxs(\"div\",{className:classes.main,children:[/*#__PURE__*/_jsx(\"h1\",{className:classes.title,children:\"Reset Password\"}),/*#__PURE__*/_jsx(TextFieldComp,{class:classes.label,name:\"Current Password: \",textFieldDisable:false,placeholder:'Current password',value:currentPassword,onChange:currentPasswordHandler,type:\"password\"}),/*#__PURE__*/_jsx(TextFieldComp,{class:classes.label,name:\"New Password: \",textFieldDisable:false,placeholder:'New password',value:newPassword,onChange:newPasswordHandler,type:\"password\"}),/*#__PURE__*/_jsx(TextFieldComp,{class:classes.label,name:\"Confirm New Password: \",textFieldDisable:false,placeholder:'Confirm new password',value:newPasswordConfirm,onChange:newPasswordConfirmHandler,type:\"password\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:classes.btn,color:\"secondary\",onClick:updatePassword,type:\"submit\",children:\" Update password \"})]});}export default PasswordChange;","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/backend/frontend2/src/screens/restaurant/PasswordChange.js"],"names":["Button","makeStyles","TextField","React","TextFieldComp","axios","useSelector","PasswordChange","useState","currentPassword","setCurrentPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","user","state","userReducer","URL","currentPasswordHandler","e","target","value","newPasswordHandler","newPasswordConfirmHandler","resetPass","config","headers","Authorization","token","put","current_password","new_password","data","window","alert","message","updatePassword","useStyles","theme","main","display","flexDirection","alignItems","title","typography","content","textAlign","fontSize","marginTop","marginBottom","label","btn","buttonDef","classes"],"mappings":"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","sourcesContent":["import { Button, makeStyles, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport TextFieldComp from '../../components/TextFieldComp'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction PasswordChange() {\r\n    const [currentPassword, setCurrentPassword] = React.useState('')\r\n    const [newPassword, setNewPassword] = React.useState('')\r\n    const [newPasswordConfirm, setNewPasswordConfirm] = React.useState('')\r\n    const user = useSelector(state => state.userReducer?.user ? state.userReducer?.user : state.userReducer?.user?.user)\r\n    const URL = 'https://foowoo1.herokuapp.com'\r\n    const currentPasswordHandler = (e) => {\r\n        setCurrentPassword(e.target.value)\r\n    }\r\n    const newPasswordHandler = (e) => {\r\n        setNewPassword(e.target.value)\r\n    }\r\n    const newPasswordConfirmHandler = (e) => {\r\n        setNewPasswordConfirm(e.target.value)\r\n    }\r\n\r\n    const resetPass = async()=>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user?.token ? user?.token : user?.user?.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${URL}/api/restaurant/restaurant-password/update/`, {\r\n            current_password: currentPassword,\r\n            new_password: newPassword,\r\n\r\n        }, config)\r\n        window.alert(data.message)\r\n    }\r\n\r\n    const updatePassword = () => {\r\n        if (newPassword != newPasswordConfirm) {\r\n            window.alert('Please confirm passwords properly ')\r\n            return\r\n        }\r\n        resetPass()\r\n\r\n    }\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        main: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '2.5rem',\r\n            marginTop: '1rem',\r\n            marginBottom: '30px'\r\n        },\r\n        label: {\r\n            ...theme.typography.title,\r\n            fontSize: '1.5rem'\r\n        },\r\n        btn: {\r\n            ...theme.buttonDef\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.main} >\r\n            <h1 className={classes.title} >Reset Password</h1>\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='Current Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'Current password'}\r\n                value={currentPassword}\r\n                onChange={currentPasswordHandler}\r\n                type='password'\r\n            />\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='New Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'New password'}\r\n                value={newPassword}\r\n                onChange={newPasswordHandler}\r\n                type='password'\r\n            />\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='Confirm New Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'Confirm new password'}\r\n                value={newPasswordConfirm}\r\n                onChange={newPasswordConfirmHandler}\r\n                type='password'\r\n            />\r\n            <Button variant='contained' className={classes.btn} color='secondary'\r\n                onClick={updatePassword} type='submit' > Update password </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordChange\r\n"]},"metadata":{},"sourceType":"module"}