{"ast":null,"code":"import _objectSpread from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/Full HTML/Django-react/foowoo/backend/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Grid,makeStyles}from'@material-ui/core';import React from'react';import{Link}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{ListRestaurants}from'../actions/RestaurantActions';import rs_bg from'../allImages/rs_bg.png';import Restaurant from'../components/Restaurant';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RestaurantsListScreen(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),restaurantListState=_React$useState2[0],setRestaurantListState=_React$useState2[1];var restaurantList=useSelector(function(state){return state.restaurantList;});var restaurants=restaurantList.restaurants;// const pageNumber = restaurants?.next == null ?\n//     null : parseInt(restaurants?.next?.split('=')[1]) - 1\n// const ApiUrl = restaurants?.previous == null ? 'http://127.0.0.1:8000' : `http://127.0.0.1:8000/api/${pageNumber}`\nvar dispatch=useDispatch();React.useEffect(function(){dispatch(ListRestaurants());},[dispatch]);React.useEffect(function(){setRestaurantListState((restaurants===null||restaurants===void 0?void 0:restaurants.results)?restaurants.results:restaurants);});console.log(restaurants);console.log(restaurantListState);var useStyles=makeStyles(function(theme){return{image:{position:'fixed',width:'100%',zIndex:'-100',minHeight:'200px'},title:_objectSpread(_objectSpread({position:'relative'},theme.typography.content),{},{textAlign:'center',fontSize:'3rem',top:'50px',color:'black'})};});var classes=useStyles();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:rs_bg,alt:\"bg-green\",className:classes.image}),/*#__PURE__*/_jsx(\"h1\",{className:classes.title,children:\"ALL RESTAURANTS LIST\"}),/*#__PURE__*/_jsx(Button,{color:\"black\",component:Link,to:\"/\",variant:\"outlined\",style:{marginLeft:'30px'},children:\"GO BACK\"}),/*#__PURE__*/_jsx(Grid,{xs:12,direction:\"row\",container:true,justify:\"space-evenly\",style:{marginTop:'70px'},children:restaurantListState===null||restaurantListState===void 0?void 0:restaurantListState.map(function(item){return/*#__PURE__*/_jsx(Grid,{xs:6,direction:\"column\",justify:\"space-evenly\",spacing:6,md:4,item:true,children:/*#__PURE__*/_jsx(Restaurant,{name:item.name,address:item.address,city:item.city,state:item.state,pincode:item.pincode,image:item.image,id:item.id})});})}),/*#__PURE__*/_jsx(Grid,{container:true,justify:\"space-between\",children:/*#__PURE__*/_jsxs(\"div\",{style:{paddingLeft:'30px',paddingRight:'30px',marginTop:'30px'},children:[(restaurants===null||restaurants===void 0?void 0:restaurants.previous)?/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:function onClick(){dispatch(ListRestaurants((restaurants===null||restaurants===void 0?void 0:restaurants.previous)?restaurants.previous:'http://127.0.0.1:8000/api/'));},children:\"Previous  page\"}):null,(restaurants===null||restaurants===void 0?void 0:restaurants.next)?/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"outlined\",onClick:function onClick(){// setPagination(prevState => prevState + 1)\ndispatch(ListRestaurants((restaurants===null||restaurants===void 0?void 0:restaurants.next)?restaurants.next:'http://127.0.0.1:8000/api/'));},children:\"Next page\"}):null]})})]});}//next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\n//then we get the data of the next page and render it\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\n//and get next page's data\nexport default RestaurantsListScreen;","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/backend/frontend2/src/screens/RestaurantsListScreen.js"],"names":["Button","Grid","makeStyles","React","Link","useDispatch","useSelector","ListRestaurants","rs_bg","Restaurant","RestaurantsListScreen","useState","restaurantListState","setRestaurantListState","restaurantList","state","restaurants","dispatch","useEffect","results","console","log","useStyles","theme","image","position","width","zIndex","minHeight","title","typography","content","textAlign","fontSize","top","color","classes","marginLeft","marginTop","map","item","name","address","city","pincode","id","paddingLeft","paddingRight","previous","next"],"mappings":"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","sourcesContent":["import { Button, Grid, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListRestaurants } from '../actions/RestaurantActions'\r\nimport rs_bg from '../allImages/rs_bg.png'\r\nimport Restaurant from '../components/Restaurant'\r\nfunction RestaurantsListScreen() {\r\n\r\n    const [restaurantListState, setRestaurantListState] = React.useState([])\r\n    const restaurantList = useSelector(state => state.restaurantList)\r\n    const { restaurants } = restaurantList\r\n    // const pageNumber = restaurants?.next == null ?\r\n    //     null : parseInt(restaurants?.next?.split('=')[1]) - 1\r\n    // const ApiUrl = restaurants?.previous == null ? 'http://127.0.0.1:8000' : `http://127.0.0.1:8000/api/${pageNumber}`\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(ListRestaurants())\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        setRestaurantListState(restaurants?.results ? restaurants.results : restaurants)\r\n    })\r\n\r\n    console.log(restaurants)\r\n    console.log(restaurantListState)\r\n    const useStyles = makeStyles(theme => ({\r\n        image: {\r\n            position: 'fixed',\r\n            width: '100%',\r\n            zIndex: '-100',\r\n            minHeight: '200px'\r\n        },\r\n        title: {\r\n            position: 'relative',\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '3rem',\r\n            top: '50px',\r\n            color: 'black',\r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <img src={rs_bg} alt='bg-green' className={classes.image} ></img>\r\n            <h1 className={classes.title} >ALL RESTAURANTS LIST</h1>\r\n            <Button color='black' component={Link} to='/' variant='outlined' style={{ marginLeft: '30px' }}  >GO BACK</Button>\r\n            <Grid xs={12} direction='row' container justify='space-evenly'\r\n                style={{\r\n                    marginTop: '70px',\r\n                }}  >\r\n\r\n                {restaurantListState?.map(item => (\r\n                    <Grid xs={6} direction='column' justify='space-evenly' spacing={6} md={4} item >\r\n                        <Restaurant\r\n                            name={item.name}\r\n                            address={item.address}\r\n                            city={item.city}\r\n                            state={item.state}\r\n                            pincode={item.pincode}\r\n                            image={item.image}\r\n                            id={item.id}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n\r\n            </Grid>\r\n            <Grid container justify='space-between' >\r\n                <div style={{ paddingLeft: '30px', paddingRight: '30px', marginTop: '30px' }} >\r\n                    {restaurants?.previous ? (\r\n                        <Button color='primary' variant='outlined' onClick={() => {\r\n                            dispatch(ListRestaurants(restaurants?.previous ? restaurants.previous : 'http://127.0.0.1:8000/api/'))\r\n                        }} >Previous  page</Button>\r\n                    ) : null}\r\n                    {restaurants?.next ? (<Button color='primary' variant='outlined' onClick={() => {\r\n                        // setPagination(prevState => prevState + 1)\r\n                        dispatch(ListRestaurants(restaurants?.next ? restaurants.next : 'http://127.0.0.1:8000/api/'))\r\n                    }} >Next page</Button>) : null}\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n//next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\r\n//then we get the data of the next page and render it\r\n\r\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\r\n//and get next page's data\r\n\r\nexport default RestaurantsListScreen\r\n"]},"metadata":{},"sourceType":"module"}