{"ast":null,"code":"import axios from 'axios';\nimport { RESTAURANT_LIST_FAIL, RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_SERVINGS_FAIL, RESTAURANT_SERVINGS_REQUEST, RESTAURANT_SERVINGS_SUCCESS, RESTAURANT_PROFILE_SUCCESS, RESTAURANT_PROFILE_REQUEST, RESTAURANT_PROFILE_FAIL } from '../constants/RestaurantConstants';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS } from \"../constants/userConstants\";\nconst URL = 'http://127.0.0.1:8000';\nconst user = JSON.parse(localStorage.getItem('userInfo'));\nexport const ListRestaurants = (url = URL + '/api/') => async dispatch => {\n  try {\n    dispatch({\n      type: RESTAURANT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(url);\n    dispatch({\n      type: RESTAURANT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: RESTAURANT_LIST_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const RestaurantServings = id => async dispatch => {\n  try {\n    dispatch({\n      type: RESTAURANT_SERVINGS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${URL}/api/restaurant/restaurant-servings/${id}`);\n    dispatch({\n      type: RESTAURANT_SERVINGS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: RESTAURANT_SERVINGS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const restLogin = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password,\n      config\n    });\n\n    if (!data.is_user) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as user. Please login as a User'\n      });\n      window.alert('You are registered as User. Please login as a User');\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};\nexport const restProfile = () => async dispatch => {\n  try {\n    dispatch({\n      type: RESTAURANT_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = axios.put(`${URL}/api/restaurant/restaurant-profile/update/`);\n  } catch (err) {}\n};","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/actions/RestaurantActions.js"],"names":["axios","RESTAURANT_LIST_FAIL","RESTAURANT_LIST_REQUEST","RESTAURANT_LIST_SUCCESS","RESTAURANT_SERVINGS_FAIL","RESTAURANT_SERVINGS_REQUEST","RESTAURANT_SERVINGS_SUCCESS","RESTAURANT_PROFILE_SUCCESS","RESTAURANT_PROFILE_REQUEST","RESTAURANT_PROFILE_FAIL","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","URL","user","JSON","parse","localStorage","getItem","ListRestaurants","url","dispatch","type","data","get","payload","err","message","RestaurantServings","id","config","headers","restLogin","email","password","post","is_user","setItem","stringify","window","alert","restProfile","Authorization","userInfo","token","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    RESTAURANT_LIST_FAIL,\r\n    RESTAURANT_LIST_REQUEST,\r\n    RESTAURANT_LIST_SUCCESS,\r\n\r\n\r\n    RESTAURANT_SERVINGS_FAIL, RESTAURANT_SERVINGS_REQUEST,\r\n\r\n    RESTAURANT_SERVINGS_SUCCESS,\r\n    RESTAURANT_PROFILE_SUCCESS,\r\n    RESTAURANT_PROFILE_REQUEST,\r\n    RESTAURANT_PROFILE_FAIL\r\n} from '../constants/RestaurantConstants'\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS\r\n} from \"../constants/userConstants\"\r\n\r\n\r\n\r\n\r\nconst URL = 'http://127.0.0.1:8000'\r\nconst user = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\nexport const ListRestaurants = (url = URL + '/api/') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: RESTAURANT_LIST_REQUEST\r\n        })\r\n        const { data } = await axios.get(url)\r\n        dispatch({\r\n            type: RESTAURANT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESTAURANT_LIST_FAIL,\r\n            payload: err.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const RestaurantServings = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: RESTAURANT_SERVINGS_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${URL}/api/restaurant/restaurant-servings/${id}`)\r\n\r\n        dispatch({\r\n            type:RESTAURANT_SERVINGS_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:RESTAURANT_SERVINGS_FAIL,\r\n            payload:err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const restLogin = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n            config\r\n        })\r\n        if (!data.is_user) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as user. Please login as a User'\r\n            })\r\n            window.alert('You are registered as User. Please login as a User')\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const restProfile = ()=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type: RESTAURANT_PROFILE_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = axios.put(`${URL}/api/restaurant/restaurant-profile/update/`)\r\n    }catch(err){\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}