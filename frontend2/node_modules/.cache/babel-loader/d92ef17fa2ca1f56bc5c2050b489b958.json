{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\RestaurantsListScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListRestaurants } from '../actions/RestaurantActions';\nimport rs_bg from '../allImages/rs_bg.png';\nimport Restaurant from '../components/Restaurant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RestaurantsListScreen() {\n  _s();\n\n  const [pagination, setPagination] = React.useState(1);\n  const [restaurantListState, setRestaurantListState] = React.useState([]);\n  const restaurantList = useSelector(state => state.restaurantList);\n  const {\n    restaurants\n  } = restaurantList;\n  console.log(pagination);\n  const restList = [{\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }, {\n    name: 'aliagar',\n    location: 'sagwara,sagwara,sagwara,sagwara,sagwara'\n  }];\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(ListRestaurants(pagination));\n  }, [dispatch]);\n  React.useEffect(() => {\n    setRestaurantListState(restaurants.results);\n  }, [pagination]);\n  console.log(restaurants);\n  console.log(restaurantListState);\n  const useStyles = makeStyles(theme => ({\n    image: {\n      position: 'fixed',\n      width: '100%',\n      zIndex: '-100',\n      minHeight: '200px'\n    },\n    title: {\n      position: 'relative',\n      ...theme.typography.content,\n      textAlign: 'center',\n      fontSize: '3rem',\n      top: '50px',\n      color: 'black'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: rs_bg,\n      alt: \"bg-green\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"ALL RESTAURANTS LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      direction: \"row\",\n      container: true,\n      justify: \"space-evenly\",\n      style: {\n        marginTop: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setPagination(prevState => prevState - 1);\n          dispatch(ListRestaurants(pagination));\n        },\n        children: \"Previous  page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), restaurantListState === null || restaurantListState === void 0 ? void 0 : restaurantListState.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 6,\n        direction: \"column\",\n        justify: \"center\",\n        spacing: 6,\n        md: 4,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Restaurant, {\n          name: item.name,\n          address: item.address,\n          city: item.city,\n          state: item.state,\n          pincode: item.pincode,\n          image: item.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          // setPagination(prevState => prevState + 1)\n          dispatch(ListRestaurants(pagination + 1));\n        },\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n} //next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\n//then we get the data of the next page and render it\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\n//and get next page's data\n\n\n_s(RestaurantsListScreen, \"JrMZCKnZDClKVgSpHNRR8pshTHo=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = RestaurantsListScreen;\nexport default RestaurantsListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsListScreen\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/RestaurantsListScreen.js"],"names":["Button","Grid","makeStyles","React","useDispatch","useSelector","ListRestaurants","rs_bg","Restaurant","RestaurantsListScreen","pagination","setPagination","useState","restaurantListState","setRestaurantListState","restaurantList","state","restaurants","console","log","restList","name","location","dispatch","useEffect","results","useStyles","theme","image","position","width","zIndex","minHeight","title","typography","content","textAlign","fontSize","top","color","classes","marginTop","prevState","map","item","address","city","pincode"],"mappings":"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","sourcesContent":["import { Button, Grid, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListRestaurants } from '../actions/RestaurantActions'\r\nimport rs_bg from '../allImages/rs_bg.png'\r\nimport Restaurant from '../components/Restaurant'\r\nfunction RestaurantsListScreen() {\r\n\r\n    const [pagination, setPagination] = React.useState(1)\r\n    const [restaurantListState, setRestaurantListState] = React.useState([])\r\n    const restaurantList = useSelector(state => state.restaurantList)\r\n    const { restaurants } = restaurantList\r\n    console.log(pagination)\r\n    const restList = [\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n        {\r\n            name: 'aliagar',\r\n            location: 'sagwara,sagwara,sagwara,sagwara,sagwara',\r\n\r\n        },\r\n\r\n    ]\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(ListRestaurants(pagination))\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        setRestaurantListState(restaurants.results)\r\n    },[pagination])\r\n\r\n    console.log(restaurants)\r\n    console.log(restaurantListState)\r\n    const useStyles = makeStyles(theme => ({\r\n        image: {\r\n            position: 'fixed',\r\n            width: '100%',\r\n            zIndex: '-100',\r\n            minHeight: '200px'\r\n        },\r\n        title: {\r\n            position: 'relative',\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '3rem',\r\n            top: '50px',\r\n            color: 'black',\r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <img src={rs_bg} alt='bg-green' className={classes.image} ></img>\r\n            <h1 className={classes.title} >ALL RESTAURANTS LIST</h1>\r\n            <Grid xs={12} direction='row' container justify='space-evenly'\r\n                style={{\r\n                    marginTop: '70px',\r\n                }}  >\r\n                <Button onClick={() => {\r\n                    setPagination(prevState => prevState - 1)\r\n                    dispatch(ListRestaurants(pagination))\r\n\r\n\r\n                }} >Previous  page</Button>\r\n                {restaurantListState?.map(item => (\r\n                    <Grid xs={6} direction='column' justify='center' spacing={6} md={4} item >\r\n                        <Restaurant\r\n                            name={item.name}\r\n                            address={item.address}\r\n                            city={item.city}\r\n                            state={item.state}\r\n                            pincode={item.pincode}\r\n                            image={item.image}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n                <Button onClick={() => {\r\n                    // setPagination(prevState => prevState + 1)\r\n                    dispatch(ListRestaurants(pagination+1))\r\n                }} >Next page</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n//next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\r\n//then we get the data of the next page and render it\r\n\r\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\r\n//and get next page's data\r\n\r\nexport default RestaurantsListScreen\r\n"]},"metadata":{},"sourceType":"module"}