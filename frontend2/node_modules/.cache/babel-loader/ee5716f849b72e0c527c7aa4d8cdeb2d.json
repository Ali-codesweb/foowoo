{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\restaurant\\\\RestProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { restProfile, restProfileUpdate } from '../../actions/RestaurantActions';\nimport TextFieldComp from '../../components/TextFieldComp';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RestProfileScreen(props) {\n  _s();\n\n  const details = useSelector(state => {\n    var _state$restaurantDeta;\n\n    return state === null || state === void 0 ? void 0 : (_state$restaurantDeta = state.restaurantDetails) === null || _state$restaurantDeta === void 0 ? void 0 : _state$restaurantDeta.details;\n  });\n  const [textFieldDisable, setTextFieldDisable] = React.useState(false);\n  const [username, setUsername] = React.useState('');\n  const [restaurantName, setRestaurantName] = React.useState('');\n  const [country, setCountry] = React.useState('');\n  const [city, setCity] = React.useState('');\n  const [state, setState] = React.useState('');\n  const [address, setAddress] = React.useState('');\n  const [pincode, setPincode] = React.useState(details === null || details === void 0 ? void 0 : details.pincode);\n\n  const usernameHandler = e => {\n    setUsername(e.target.value);\n  };\n\n  const restaurantNameHandler = e => {\n    setRestaurantName(e.target.value);\n  };\n\n  const countryHandler = e => {\n    setCountry(e.target.value);\n  };\n\n  const cityHandler = e => {\n    setCity(e.target.value);\n  };\n\n  const stateHandler = e => {\n    setState(e.target.value);\n  };\n\n  const addressHandler = e => {\n    setAddress(e.target.value);\n  };\n\n  const pincodeHandler = e => {\n    setPincode(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n  const restInfo = JSON.parse(localStorage.getItem('userInfo'));\n  console.log(details);\n  console.log(restInfo);\n  React.useEffect(() => {\n    dispatch(restProfile());\n\n    if (props.match.params.id != restInfo.id) {\n      props.history.push('/rest/profile/' + restInfo.id);\n    }\n  }, [dispatch]);\n\n  const updateProfile = () => {\n    dispatch(restProfileUpdate(username, restaurantName, country, city, state, address, pincode));\n  };\n\n  const useStyles = makeStyles(theme => ({\n    heading: { ...theme.typography.content,\n      fontSize: '2.5rem',\n      textAlign: 'center'\n    },\n    formDiv: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 'auto',\n      width: '400px',\n      backgroundColor: theme.palette.secondary.light,\n      marginTop: '30px',\n      borderRadius: '15px',\n      flexDirection: 'column',\n      paddingTop: '50px',\n      paddingBottom: '50px'\n    },\n    label: { ...theme.typography.title,\n      fontSize: '1.5rem'\n    },\n    btn: { ...theme.buttonDef\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.heading,\n      children: \"My servings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formDiv,\n      children: [/*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"Username: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: restInfo === null || restInfo === void 0 ? void 0 : restInfo.username,\n        value: username,\n        onChange: usernameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"Name: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.name,\n        value: restaurantName,\n        onChange: restaurantNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"Address: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.address,\n        value: address,\n        onChange: addressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"City: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.city,\n        value: city,\n        onChange: cityHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"Country: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.country,\n        value: country,\n        onChange: countryHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"State: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.state,\n        value: state,\n        onChange: stateHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n        class: classes.label,\n        name: \"Pincode: \",\n        textFieldDisable: textFieldDisable,\n        placeholder: details === null || details === void 0 ? void 0 : details.pincode,\n        value: pincode,\n        onChange: pincodeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.btn,\n        onClick: updateProfile,\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/rest/password-change\",\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RestProfileScreen, \"Bmkt8MlZtxu6gsvkAkoZ2XA+qO8=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = RestProfileScreen;\nexport default RestProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestProfileScreen\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/restaurant/RestProfileScreen.js"],"names":["Button","Grid","TextField","Typography","makeStyles","React","useDispatch","useSelector","restProfile","restProfileUpdate","TextFieldComp","Link","RestProfileScreen","props","details","state","restaurantDetails","textFieldDisable","setTextFieldDisable","useState","username","setUsername","restaurantName","setRestaurantName","country","setCountry","city","setCity","setState","address","setAddress","pincode","setPincode","usernameHandler","e","target","value","restaurantNameHandler","countryHandler","cityHandler","stateHandler","addressHandler","pincodeHandler","dispatch","restInfo","JSON","parse","localStorage","getItem","console","log","useEffect","match","params","id","history","push","updateProfile","useStyles","theme","heading","typography","content","fontSize","textAlign","formDiv","display","alignItems","justifyContent","height","width","backgroundColor","palette","secondary","light","marginTop","borderRadius","flexDirection","paddingTop","paddingBottom","label","title","btn","buttonDef","classes","name"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAqBC,iBAArB,QAA8C,iCAA9C;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC9B,QAAMC,OAAO,GAAGP,WAAW,CAACQ,KAAK;AAAA;;AAAA,WAAIA,KAAJ,aAAIA,KAAJ,gDAAIA,KAAK,CAAEC,iBAAX,0DAAI,sBAA0BF,OAA9B;AAAA,GAAN,CAA3B;AAEA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0Cb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAhD;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACc,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsClB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBpB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACc,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACJ,KAAD,EAAQa,QAAR,IAAoBvB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBzB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwB3B,KAAK,CAACc,QAAN,CAAeL,OAAf,aAAeA,OAAf,uBAAeA,OAAO,CAAEiB,OAAxB,CAA9B;;AAEA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC3Bb,IAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAGA,QAAMC,qBAAqB,GAAIH,CAAD,IAAO;AACjCX,IAAAA,iBAAiB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACH,GAFD;;AAGA,QAAME,cAAc,GAAIJ,CAAD,IAAO;AAC1BT,IAAAA,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAGA,QAAMG,WAAW,GAAIL,CAAD,IAAO;AACvBP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAIN,CAAD,IAAO;AACxBN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMK,cAAc,GAAIP,CAAD,IAAO;AAC1BJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAGA,QAAMM,cAAc,GAAIR,CAAD,IAAO;AAC1BF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAGA,QAAMO,QAAQ,GAAGrC,WAAW,EAA5B;AAEA,QAAMsC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYpC,OAAZ;AACAmC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAvC,EAAAA,KAAK,CAAC8C,SAAN,CAAgB,MAAM;AAClBR,IAAAA,QAAQ,CAACnC,WAAW,EAAZ,CAAR;;AACA,QAAIK,KAAK,CAACuC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,IAAyBV,QAAQ,CAACU,EAAtC,EAA0C;AACtCzC,MAAAA,KAAK,CAAC0C,OAAN,CAAcC,IAAd,CAAmB,mBAAmBZ,QAAQ,CAACU,EAA/C;AACH;AACJ,GALD,EAKG,CAACX,QAAD,CALH;;AAOA,QAAMc,aAAa,GAAG,MAAI;AACtBd,IAAAA,QAAQ,CAAClC,iBAAiB,CAACW,QAAD,EAAUE,cAAV,EAAyBE,OAAzB,EAAiCE,IAAjC,EAAsCX,KAAtC,EAA4Cc,OAA5C,EAAoDE,OAApD,CAAlB,CAAR;AAEH,GAHD;;AAKA,QAAM2B,SAAS,GAAGtD,UAAU,CAACuD,KAAK,KAAK;AACnCC,IAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACE,UAAN,CAAiBC,OADf;AAELC,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAD0B;AAMnCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,MAAM,EAAE,MAJH;AAKLC,MAAAA,KAAK,EAAE,OALF;AAMLC,MAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAcC,SAAd,CAAwBC,KANpC;AAOLC,MAAAA,SAAS,EAAE,MAPN;AAQLC,MAAAA,YAAY,EAAE,MART;AASLC,MAAAA,aAAa,EAAE,QATV;AAULC,MAAAA,UAAU,EAAE,MAVP;AAWLC,MAAAA,aAAa,EAAE;AAXV,KAN0B;AAmBnCC,IAAAA,KAAK,EAAE,EACH,GAAGrB,KAAK,CAACE,UAAN,CAAiBoB,KADjB;AAEHlB,MAAAA,QAAQ,EAAE;AAFP,KAnB4B;AAuBnCmB,IAAAA,GAAG,EAAC,EACA,GAAGvB,KAAK,CAACwB;AADT;AAvB+B,GAAL,CAAN,CAA5B;AA2BA,QAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AACRQ,MAAAA,OAAO,EAAE,MADD;AAERW,MAAAA,aAAa,EAAE,QAFP;AAGRV,MAAAA,UAAU,EAAE;AAHJ,KAAZ;AAAA,4BAKI;AAAI,MAAA,SAAS,EAAEiB,OAAO,CAACxB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAEwB,OAAO,CAACnB,OAAxB;AAAA,8BAEI,QAAC,aAAD;AACI,QAAA,KAAK,EAAEmB,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAE2B,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAExB,QAJ3B;AAKI,QAAA,KAAK,EAAEA,QALX;AAMI,QAAA,QAAQ,EAAEa;AANd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI,QAAC,aAAD;AACI,QAAA,KAAK,EAAEmD,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEuE,IAJ1B;AAKI,QAAA,KAAK,EAAE/D,cALX;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE+C,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEe,OAJ1B;AAKI,QAAA,KAAK,EAAEA,OALX;AAMI,QAAA,QAAQ,EAAEY;AANd;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA0BI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE2C,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEY,IAJ1B;AAKI,QAAA,KAAK,EAAEA,IALX;AAMI,QAAA,QAAQ,EAAEa;AANd;AAAA;AAAA;AAAA;AAAA,cA1BJ,eAkCI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE6C,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,OAJ1B;AAKI,QAAA,KAAK,EAAEA,OALX;AAMI,QAAA,QAAQ,EAAEc;AANd;AAAA;AAAA;AAAA;AAAA,cAlCJ,eA0CI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE8C,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEC,KAJ1B;AAKI,QAAA,KAAK,EAAEA,KALX;AAMI,QAAA,QAAQ,EAAEyB;AANd;AAAA;AAAA;AAAA;AAAA,cA1CJ,eAkDI,QAAC,aAAD;AACI,QAAA,KAAK,EAAE4C,OAAO,CAACJ,KADnB;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,gBAAgB,EAAE/D,gBAHtB;AAII,QAAA,WAAW,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEiB,OAJ1B;AAKI,QAAA,KAAK,EAAEA,OALX;AAMI,QAAA,QAAQ,EAAEW;AANd;AAAA;AAAA;AAAA;AAAA,cAlDJ,eA0DI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AACC,QAAA,SAAS,EAAE0C,OAAO,CAACF,GADpB;AACyB,QAAA,OAAO,EAAEzB,aADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DJ,eA4DK,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,uBAAT;AAAiC,QAAA,KAAK,EAAE;AAACkB,UAAAA,SAAS,EAAC;AAAX,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5DL;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgFH;;GA9JQ/D,iB;UACWL,W,EAgCCD,W,EA4CDoD,S;;;KA7EX9C,iB;AAgKT,eAAeA,iBAAf","sourcesContent":["import { Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { restProfile,restProfileUpdate } from '../../actions/RestaurantActions';\r\nimport TextFieldComp from '../../components/TextFieldComp';\r\nimport { Link } from 'react-router-dom';\r\nfunction RestProfileScreen(props) {\r\n    const details = useSelector(state => state?.restaurantDetails?.details)\r\n    \r\n    const [textFieldDisable, setTextFieldDisable] = React.useState(false)\r\n    const [username, setUsername] = React.useState('')\r\n    const [restaurantName, setRestaurantName] = React.useState('')\r\n    const [country, setCountry] = React.useState('')\r\n    const [city, setCity] = React.useState('')\r\n    const [state, setState] = React.useState('')\r\n    const [address, setAddress] = React.useState('')\r\n    const [pincode, setPincode] = React.useState(details?.pincode)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n    const restaurantNameHandler = (e) => {\r\n        setRestaurantName(e.target.value)\r\n    }\r\n    const countryHandler = (e) => {\r\n        setCountry(e.target.value)\r\n    }\r\n    const cityHandler = (e) => {\r\n        setCity(e.target.value)\r\n    }\r\n    const stateHandler = (e) => {\r\n        setState(e.target.value)\r\n    }\r\n    const addressHandler = (e) => {\r\n        setAddress(e.target.value)\r\n    }\r\n    const pincodeHandler = (e) => {\r\n        setPincode(e.target.value)\r\n    }\r\n    const dispatch = useDispatch()\r\n    \r\n    const restInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n    console.log(details)\r\n    console.log(restInfo)\r\n    React.useEffect(() => {\r\n        dispatch(restProfile())\r\n        if (props.match.params.id != restInfo.id) {\r\n            props.history.push('/rest/profile/' + restInfo.id)\r\n        }\r\n    }, [dispatch])\r\n\r\n    const updateProfile = ()=>{\r\n        dispatch(restProfileUpdate(username,restaurantName,country,city,state,address,pincode))\r\n        \r\n    }\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        heading: {\r\n            ...theme.typography.content,\r\n            fontSize: '2.5rem',\r\n            textAlign: 'center'\r\n        },\r\n        formDiv: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: 'auto',\r\n            width: '400px',\r\n            backgroundColor: theme.palette.secondary.light,\r\n            marginTop: '30px',\r\n            borderRadius: '15px',\r\n            flexDirection: 'column',\r\n            paddingTop: '50px',\r\n            paddingBottom: '50px',\r\n        },\r\n        label: {\r\n            ...theme.typography.title,\r\n            fontSize: '1.5rem'\r\n        },\r\n        btn:{\r\n            ...theme.buttonDef\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }} >\r\n            <h1 className={classes.heading} >My servings</h1>\r\n            <div className={classes.formDiv} >\r\n                \r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='Username: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={restInfo?.username}\r\n                    value={username}\r\n                    onChange={usernameHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='Name: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.name}\r\n                    value={restaurantName}\r\n                    onChange={restaurantNameHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='Address: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.address}\r\n                    value={address}\r\n                    onChange={addressHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='City: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.city}\r\n                    value={city}\r\n                    onChange={cityHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='Country: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.country}\r\n                    value={country}\r\n                    onChange={countryHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='State: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.state}\r\n                    value={state}\r\n                    onChange={stateHandler}\r\n                />\r\n                <TextFieldComp\r\n                    class={classes.label}\r\n                    name='Pincode: '\r\n                    textFieldDisable={textFieldDisable}\r\n                    placeholder={details?.pincode}\r\n                    value={pincode}\r\n                    onChange={pincodeHandler}\r\n                />\r\n                <Button variant='contained' color='primary'\r\n                 className={classes.btn} onClick={updateProfile} >Update Profile</Button>\r\n                 <Link to='/rest/password-change' style={{marginTop:'20px'}} >Change Password</Link>\r\n            </div>\r\n            {/* {restaurantServings?.servings?.map(item => {\r\n                return (\r\n                    <Grid xs={12} container >\r\n                        <Grid item xs={12} md={} >\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            })} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}