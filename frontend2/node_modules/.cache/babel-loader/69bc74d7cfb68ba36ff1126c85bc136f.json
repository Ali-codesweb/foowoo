{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\RestaurantsListScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListRestaurants } from '../actions/RestaurantActions';\nimport rs_bg from '../allImages/rs_bg.png';\nimport Restaurant from '../components/Restaurant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RestaurantsListScreen() {\n  _s();\n\n  const [restaurantListState, setRestaurantListState] = React.useState([]);\n  const restaurantList = useSelector(state => state.restaurantList);\n  const {\n    restaurants\n  } = restaurantList; // const pageNumber = restaurants?.next == null ?\n  //     null : parseInt(restaurants?.next?.split('=')[1]) - 1\n  // const ApiUrl = restaurants?.previous == null ? 'http://127.0.0.1:8000' : `http://127.0.0.1:8000/api/${pageNumber}`\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(ListRestaurants());\n  }, [dispatch]);\n  React.useEffect(() => {\n    setRestaurantListState((restaurants === null || restaurants === void 0 ? void 0 : restaurants.results) ? restaurants.results : restaurants);\n  });\n  console.log(restaurants);\n  console.log(restaurantListState);\n  const useStyles = makeStyles(theme => ({\n    image: {\n      position: 'fixed',\n      width: '100%',\n      zIndex: '-100',\n      minHeight: '200px'\n    },\n    title: {\n      position: 'relative',\n      ...theme.typography.content,\n      textAlign: 'center',\n      fontSize: '3rem',\n      top: '50px',\n      color: 'black'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: rs_bg,\n      alt: \"bg-green\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"ALL RESTAURANTS LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"black\",\n      component: Link,\n      to: \"/\",\n      variant: \"outlined\",\n      style: {\n        marginLeft: '30px'\n      },\n      onClick: () => window.location.reload(),\n      children: \"GO BACK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      direction: \"row\",\n      container: true,\n      justify: \"space-evenly\",\n      style: {\n        marginTop: '70px'\n      },\n      children: restaurantListState === null || restaurantListState === void 0 ? void 0 : restaurantListState.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 6,\n        direction: \"column\",\n        justify: \"space-evenly\",\n        spacing: 6,\n        md: 4,\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Restaurant, {\n          name: item.name,\n          address: item.address,\n          city: item.city,\n          state: item.state,\n          pincode: item.pincode,\n          image: item.image,\n          id: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: '30px',\n          paddingRight: '30px',\n          marginTop: '30px'\n        },\n        children: [(restaurants === null || restaurants === void 0 ? void 0 : restaurants.previous) ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: () => {\n            dispatch(ListRestaurants((restaurants === null || restaurants === void 0 ? void 0 : restaurants.previous) ? restaurants.previous : 'http://127.0.0.1:8000/api/'));\n          },\n          children: \"Previous  page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this) : null, (restaurants === null || restaurants === void 0 ? void 0 : restaurants.next) ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: () => {\n            // setPagination(prevState => prevState + 1)\n            dispatch(ListRestaurants((restaurants === null || restaurants === void 0 ? void 0 : restaurants.next) ? restaurants.next : 'http://127.0.0.1:8000/api/'));\n          },\n          children: \"Next page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n} //next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\n//then we get the data of the next page and render it\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\n//and get next page's data\n\n\n_s(RestaurantsListScreen, \"Vi3H3V8smrSBvFK8BKLwetCv3qA=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = RestaurantsListScreen;\nexport default RestaurantsListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsListScreen\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/RestaurantsListScreen.js"],"names":["Button","Grid","makeStyles","React","Link","useDispatch","useSelector","ListRestaurants","rs_bg","Restaurant","RestaurantsListScreen","restaurantListState","setRestaurantListState","useState","restaurantList","state","restaurants","dispatch","useEffect","results","console","log","useStyles","theme","image","position","width","zIndex","minHeight","title","typography","content","textAlign","fontSize","top","color","classes","marginLeft","window","location","reload","marginTop","map","item","name","address","city","pincode","id","paddingLeft","paddingRight","previous","next"],"mappings":"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","sourcesContent":["import { Button, Grid, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ListRestaurants } from '../actions/RestaurantActions'\r\nimport rs_bg from '../allImages/rs_bg.png'\r\nimport Restaurant from '../components/Restaurant'\r\nfunction RestaurantsListScreen() {\r\n\r\n    const [restaurantListState, setRestaurantListState] = React.useState([])\r\n    const restaurantList = useSelector(state => state.restaurantList)\r\n    const { restaurants } = restaurantList\r\n    // const pageNumber = restaurants?.next == null ?\r\n    //     null : parseInt(restaurants?.next?.split('=')[1]) - 1\r\n    // const ApiUrl = restaurants?.previous == null ? 'http://127.0.0.1:8000' : `http://127.0.0.1:8000/api/${pageNumber}`\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(ListRestaurants())\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        setRestaurantListState(restaurants?.results ? restaurants.results : restaurants)\r\n    })\r\n\r\n    console.log(restaurants)\r\n    console.log(restaurantListState)\r\n    const useStyles = makeStyles(theme => ({\r\n        image: {\r\n            position: 'fixed',\r\n            width: '100%',\r\n            zIndex: '-100',\r\n            minHeight: '200px'\r\n        },\r\n        title: {\r\n            position: 'relative',\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '3rem',\r\n            top: '50px',\r\n            color: 'black',\r\n\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <img src={rs_bg} alt='bg-green' className={classes.image} ></img>\r\n            <h1 className={classes.title} >ALL RESTAURANTS LIST</h1>\r\n            <Button color='black' component={Link} to='/' variant='outlined' style={{ marginLeft: '30px' }} onClick={()=>window.location.reload()} >GO BACK</Button>\r\n            <Grid xs={12} direction='row' container justify='space-evenly'\r\n                style={{\r\n                    marginTop: '70px',\r\n                }}  >\r\n\r\n                {restaurantListState?.map(item => (\r\n                    <Grid xs={6} direction='column' justify='space-evenly' spacing={6} md={4} item >\r\n                        <Restaurant\r\n                            name={item.name}\r\n                            address={item.address}\r\n                            city={item.city}\r\n                            state={item.state}\r\n                            pincode={item.pincode}\r\n                            image={item.image}\r\n                            id={item.id}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n\r\n            </Grid>\r\n            <Grid container justify='space-between' >\r\n                <div style={{ paddingLeft: '30px', paddingRight: '30px', marginTop: '30px' }} >\r\n                    {restaurants?.previous ? (\r\n                        <Button color='primary' variant='outlined' onClick={() => {\r\n                            dispatch(ListRestaurants(restaurants?.previous ? restaurants.previous : 'http://127.0.0.1:8000/api/'))\r\n                        }} >Previous  page</Button>\r\n                    ) : null}\r\n                    {restaurants?.next ? (<Button color='primary' variant='outlined' onClick={() => {\r\n                        // setPagination(prevState => prevState + 1)\r\n                        dispatch(ListRestaurants(restaurants?.next ? restaurants.next : 'http://127.0.0.1:8000/api/'))\r\n                    }} >Next page</Button>) : null}\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n//next button with a state defaulted to 1, then on the button click we send a dispatch with parameter of state+1\r\n//then we get the data of the next page and render it\r\n\r\n//initially we dispatch the state with 1 param,then on the click of the button next...we increment the state by 1\r\n//and get next page's data\r\n\r\nexport default RestaurantsListScreen\r\n"]},"metadata":{},"sourceType":"module"}