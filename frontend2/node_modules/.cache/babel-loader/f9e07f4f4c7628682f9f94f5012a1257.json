{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS, USER_DONATE_REQUEST, USER_DONATE_SUCCESS, USER_DONATE_FAIL } from \"../constants/userConstants\";\nconst URL = 'http://127.0.0.1:8000';\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password,\n      config\n    });\n\n    if (data.is_user) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as restaurant. Please login as a Restaurant'\n      });\n      window.alert('You are registered as restaurant. Please login as a Restaurant');\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  localStorage.removeItem('userInfo');\n};\nexport const loginRestaurant = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password,\n      config\n    });\n\n    if (data.is_restaurant) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as user. Please login as a user'\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};\nexport const register = (email, first_name, last_name, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_SIGNUP_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/register/', {\n      'email': email,\n      'first_name': first_name,\n      'last_name': last_name,\n      'password': password,\n      config\n    });\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: data\n    });\n    console.log('success');\n  } catch (err) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const donateMeal = (restaurant_id, serving_id, quantity) => async (dispatch, getState) => {\n  const token = JSON.parse(localStorage.getItem('userInfo')).token;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    console.log(getState());\n    dispatch({\n      type: USER_DONATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${URL}/api/user/donate/`, {\n      'restaurant_id': restaurant_id,\n      'serving_id': serving_id,\n      'quantity': quantity\n    }, config);\n    dispatch({\n      type: USER_DONATE_SUCCESS,\n      payload: data\n    });\n    console.log(JSON.parse(localStorage.getItem('userInfo')).token);\n    window.alert(`You have successfully donated. We are very grateful\n         of you ! You will be informed when your donation is accepted`);\n  } catch (err) {\n    dispatch({\n      type: USER_DONATE_FAIL,\n      payload: err.message\n    });\n    window.alert(err.message);\n  }\n};","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_DONATE_REQUEST","USER_DONATE_SUCCESS","USER_DONATE_FAIL","URL","login","email","password","dispatch","config","headers","type","data","post","is_user","payload","localStorage","setItem","JSON","stringify","window","alert","err","logout","removeItem","loginRestaurant","is_restaurant","register","first_name","last_name","console","log","message","donateMeal","restaurant_id","serving_id","quantity","getState","token","parse","getItem","Authorization"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_SIGNUP_FAIL,\r\n    USER_SIGNUP_REQUEST,\r\n    USER_SIGNUP_SUCCESS,\r\n\r\n\r\n    USER_DONATE_REQUEST,\r\n    USER_DONATE_SUCCESS,\r\n    USER_DONATE_FAIL\r\n\r\n} from \"../constants/userConstants\"\r\n\r\n\r\nconst URL = 'http://127.0.0.1:8000'\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n            config\r\n        })\r\n        if (data.is_user) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as restaurant. Please login as a Restaurant'\r\n            })\r\n            window.alert('You are registered as restaurant. Please login as a Restaurant')\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const loginRestaurant = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n            config\r\n        })\r\n        if (data.is_restaurant) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as user. Please login as a user'\r\n            })\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (email, first_name, last_name, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_SIGNUP_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/register/', {\r\n            'email': email,\r\n            'first_name': first_name,\r\n            'last_name': last_name,\r\n            'password': password,\r\n            config\r\n        })\r\n        dispatch({\r\n            type: USER_SIGNUP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        console.log('success')\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_SIGNUP_FAIL,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const donateMeal = (restaurant_id, serving_id, quantity) => async (dispatch, getState) => {\r\n    const token = JSON.parse(localStorage.getItem('userInfo')).token\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        console.log(getState())\r\n        dispatch({\r\n            type: USER_DONATE_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.post(`${URL}/api/user/donate/`, {\r\n            'restaurant_id': restaurant_id,\r\n            'serving_id': serving_id,\r\n            'quantity': quantity,\r\n        },config)\r\n\r\n        dispatch({\r\n            type: USER_DONATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        console.log(JSON.parse(localStorage.getItem('userInfo')).token)\r\n\r\n        window.alert(`You have successfully donated. We are very grateful\r\n         of you ! You will be informed when your donation is accepted`)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_DONATE_FAIL,\r\n            payload: err.message\r\n        })\r\n\r\n        window.alert(err.message)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}