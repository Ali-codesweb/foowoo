{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS, USER_DONATE_REQUEST, USER_DONATE_SUCCESS, USER_DONATE_FAIL, USER_DONATIONS_LIST_REQUEST, USER_DONATIONS_LIST_SUCCESS, USER_DONATIONS_LIST_FAIL } from \"../constants/userConstants\";\nconst URL = 'http://127.0.0.1:8000';\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    const toStringifyData = JSON.stringify(data);\n\n    if (data.is_user) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', toStringifyData);\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as restaurant. Please login as a Restaurant'\n      });\n      window.alert('You are registered as restaurant. Please login as a Restaurant');\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  localStorage.removeItem('userInfo');\n};\nexport const loginRestaurant = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password,\n      config\n    });\n\n    if (data.is_restaurant) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as user. Please login as a user'\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};\nexport const register = (email, first_name, last_name, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_SIGNUP_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/register/', {\n      'email': email,\n      'first_name': first_name,\n      'last_name': last_name,\n      'password': password,\n      config\n    });\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: data\n    });\n    console.log('success');\n  } catch (err) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const donateMeal = (restaurant_id, serving_id, quantity, type) => async (dispatch, getState) => {\n  const token = getState().user.userInfo.token;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    console.log(getState());\n    dispatch({\n      type: USER_DONATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${URL}/api/user/donate-or-request/`, {\n      'restaurant_id': restaurant_id,\n      'serving_id': serving_id,\n      'quantity': quantity,\n      'type': type\n    }, config);\n    dispatch({\n      type: USER_DONATE_SUCCESS,\n      payload: data\n    });\n    window.alert(`You have successfully donated. We are very grateful\n         of you ! You will be informed when your donation is accepted`);\n  } catch (err) {\n    dispatch({\n      type: USER_DONATE_FAIL,\n      payload: err.message\n    });\n    window.alert(err.message);\n  }\n};\nexport const userProfileUpdate = (username, firstName, lastName) => async (dispatch, getState) => {\n  const token = getState().user.userInfo.token;\n  console.log(token);\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(URL + '/api/user/update-details/', {\n      username,\n      firstName,\n      lastName\n    }, config);\n    console.log(data);\n    window.alert('User profile updated');\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    window.alert(err.message);\n  }\n};\nexport const myDonationOrRequestRequests = type => async (dispatch, getState) => {\n  const token = getState().user.userInfo.token;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        'type': type\n      }\n    };\n    dispatch({\n      type: USER_DONATIONS_LIST_REQUEST,\n      loading: true\n    });\n    const {\n      data\n    } = axios.get(URL + '/api/user/my-donations-and-requests/', config);\n    console.log(data);\n    dispatch({\n      type: USER_DONATIONS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({});\n  }\n};","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_DONATE_REQUEST","USER_DONATE_SUCCESS","USER_DONATE_FAIL","USER_DONATIONS_LIST_REQUEST","USER_DONATIONS_LIST_SUCCESS","USER_DONATIONS_LIST_FAIL","URL","login","email","password","dispatch","config","headers","type","data","post","toStringifyData","JSON","stringify","is_user","payload","localStorage","setItem","window","alert","err","logout","removeItem","loginRestaurant","is_restaurant","register","first_name","last_name","console","log","message","donateMeal","restaurant_id","serving_id","quantity","getState","token","user","userInfo","Authorization","userProfileUpdate","username","firstName","lastName","myDonationOrRequestRequests","params","loading","get"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_SIGNUP_FAIL,\r\n    USER_SIGNUP_REQUEST,\r\n    USER_SIGNUP_SUCCESS,\r\n\r\n\r\n    USER_DONATE_REQUEST,\r\n    USER_DONATE_SUCCESS,\r\n    USER_DONATE_FAIL,\r\n\r\n    USER_DONATIONS_LIST_REQUEST,\r\n    USER_DONATIONS_LIST_SUCCESS,\r\n    USER_DONATIONS_LIST_FAIL\r\n\r\n} from \"../constants/userConstants\"\r\n\r\n\r\nconst URL = 'http://127.0.0.1:8000'\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n\r\n        }, config)\r\n\r\n        const toStringifyData = JSON.stringify(data)\r\n\r\n        if (data.is_user) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', toStringifyData)\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as restaurant. Please login as a Restaurant'\r\n            })\r\n            window.alert('You are registered as restaurant. Please login as a Restaurant')\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const loginRestaurant = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n            config\r\n        })\r\n        if (data.is_restaurant) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as user. Please login as a user'\r\n            })\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (email, first_name, last_name, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_SIGNUP_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/register/', {\r\n            'email': email,\r\n            'first_name': first_name,\r\n            'last_name': last_name,\r\n            'password': password,\r\n            config\r\n        })\r\n        dispatch({\r\n            type: USER_SIGNUP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        console.log('success')\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_SIGNUP_FAIL,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const donateMeal = (restaurant_id, serving_id, quantity, type) => async (dispatch, getState) => {\r\n    const token = getState().user.userInfo.token\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        console.log(getState())\r\n        dispatch({\r\n            type: USER_DONATE_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.post(`${URL}/api/user/donate-or-request/`, {\r\n            'restaurant_id': restaurant_id,\r\n            'serving_id': serving_id,\r\n            'quantity': quantity,\r\n            'type': type\r\n        }, config)\r\n\r\n        dispatch({\r\n            type: USER_DONATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        window.alert(`You have successfully donated. We are very grateful\r\n         of you ! You will be informed when your donation is accepted`)\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_DONATE_FAIL,\r\n            payload: err.message\r\n        })\r\n\r\n        window.alert(err.message)\r\n    }\r\n}\r\n\r\n\r\nexport const userProfileUpdate = (username, firstName, lastName) => async (dispatch, getState) => {\r\n    const token = getState().user.userInfo.token\r\n    console.log(token)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(URL + '/api/user/update-details/', {\r\n            username,\r\n            firstName,\r\n            lastName\r\n        }, config)\r\n\r\n        console.log(data)\r\n        window.alert('User profile updated')\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    }\r\n    catch (err) {\r\n        window.alert(err.message)\r\n    }\r\n}\r\n\r\nexport const myDonationOrRequestRequests = (type)=>async(dispatch,getState)=>{\r\n    const token = getState().user.userInfo.token\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            params: {\r\n                'type': type\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type:USER_DONATIONS_LIST_REQUEST,\r\n            loading:true\r\n        })\r\n        const {data} = axios.get(URL+'/api/user/my-donations-and-requests/',config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_DONATIONS_LIST_SUCCESS,\r\n            payload : data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            \r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}