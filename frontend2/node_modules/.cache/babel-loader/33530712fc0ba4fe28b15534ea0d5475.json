{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\restaurant\\\\AddNewServingScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport FormDiv from '../../components/FormDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewServingScreen() {\n  _s();\n\n  // Name,description,ingredients,image,quantity,is_vegan\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [ingredients, setIngredients] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [isVegan, setIsVegan] = React.useState(false);\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const onChangeIngredients = e => {\n    setIngredients(e.target.value);\n  };\n\n  const onChangeImage = e => {\n    setImage(e.target.value);\n  };\n\n  const onChangeQuantity = e => {\n    setQuantity(e.target.value);\n  };\n\n  const onChangeIsVegan = e => {\n    setIsVegan(e.target.value);\n  };\n\n  const createServing = () => {\n    console.log('serving creation under process');\n  };\n\n  const useStyles = makeStyles(theme => ({\n    title: { ...theme.typography.content,\n      textAlign: 'center',\n      fontSize: '2.5rem',\n      marginTop: '20px'\n    },\n    formDiv: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 'auto',\n      width: '400px',\n      backgroundColor: theme.palette.secondary.light,\n      marginTop: '30px',\n      marginBottom: '30px',\n      borderRadius: '15px',\n      flexDirection: 'column',\n      paddingTop: '50px',\n      paddingBottom: '50px'\n    },\n    label: { ...theme.typography.title,\n      fontSize: '1.5rem'\n    },\n    btn: { ...theme.buttonDef\n    },\n    btnser: { ...theme.buttonDef,\n      marginLeft: 'auto',\n      marginRight: '20px'\n    },\n    btnLeft: {\n      poaition: 'relative',\n      marginRight: 'auto',\n      marginLeft: '20px'\n    }\n  }));\n  const classes = useStyles();\n  const data = [{\n    name: 'Name',\n    placeholder: '',\n    value: name,\n    onChange: onChangeName\n  }, {\n    name: 'Description',\n    placeholder: '',\n    value: description,\n    onChange: onChangeDescription\n  }, {\n    name: 'Ingredients',\n    placeholder: '',\n    value: ingredients,\n    onChange: onChangeIngredients\n  }, {\n    name: 'Quantity',\n    placeholder: '',\n    value: quantity,\n    onChange: onChangeQuantity\n  }, {\n    name: 'Is Vegan',\n    placeholder: '',\n    value: isVegan,\n    onChange: onChangeIsVegan\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: \"Add new Serving\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formDiv,\n      children: /*#__PURE__*/_jsxDEV(FormDiv, {\n        data: data,\n        actionName: \"Create Serving\",\n        actionTaken: createServing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewServingScreen, \"qdf9aSE6DLkuEkXsIPYq7VDDnm0=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddNewServingScreen;\nexport default AddNewServingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewServingScreen\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/restaurant/AddNewServingScreen.js"],"names":["Button","makeStyles","React","FormDiv","AddNewServingScreen","name","setName","useState","description","setDescription","ingredients","setIngredients","image","setImage","quantity","setQuantity","isVegan","setIsVegan","onChangeName","e","target","value","onChangeDescription","onChangeIngredients","onChangeImage","onChangeQuantity","onChangeIsVegan","createServing","console","log","useStyles","theme","title","typography","content","textAlign","fontSize","marginTop","formDiv","display","alignItems","justifyContent","height","width","backgroundColor","palette","secondary","light","marginBottom","borderRadius","flexDirection","paddingTop","paddingBottom","label","btn","buttonDef","btnser","marginLeft","marginRight","btnLeft","poaition","classes","data","placeholder","onChange"],"mappings":"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","sourcesContent":["import { Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport React from 'react'\r\nimport FormDiv from '../../components/FormDiv'\r\n\r\nfunction AddNewServingScreen() {\r\n    // Name,description,ingredients,image,quantity,is_vegan\r\n    const [name, setName] = React.useState('')\r\n    const [description, setDescription] = React.useState('')\r\n    const [ingredients, setIngredients] = React.useState('')\r\n    const [image, setImage] = React.useState('')\r\n    const [quantity, setQuantity] = React.useState('')\r\n    const [isVegan, setIsVegan] = React.useState(false)\r\n\r\n\r\n\r\n    const onChangeName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const onChangeDescription = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    const onChangeIngredients = (e) => {\r\n        setIngredients(e.target.value)\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setImage(e.target.value)\r\n    }\r\n    const onChangeQuantity = (e) => {\r\n        setQuantity(e.target.value)\r\n    }\r\n    const onChangeIsVegan = (e) => {\r\n        setIsVegan(e.target.value)\r\n    }\r\n\r\n    const createServing = ()=>{\r\n        console.log('serving creation under process')\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        title: {\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '2.5rem',\r\n            marginTop: '20px'\r\n        },\r\n        formDiv: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: 'auto',\r\n            width: '400px',\r\n            backgroundColor: theme.palette.secondary.light,\r\n            marginTop: '30px',\r\n            marginBottom: '30px',\r\n            borderRadius: '15px',\r\n            flexDirection: 'column',\r\n            paddingTop: '50px',\r\n            paddingBottom: '50px',\r\n        },\r\n        label: {\r\n            ...theme.typography.title,\r\n            fontSize: '1.5rem'\r\n        },\r\n        btn: {\r\n            ...theme.buttonDef\r\n        },\r\n        btnser: {\r\n            ...theme.buttonDef,\r\n            marginLeft: 'auto',\r\n            marginRight: '20px'\r\n        },\r\n        btnLeft: {\r\n            poaition: 'relative',\r\n            marginRight: 'auto',\r\n            marginLeft: '20px'\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    const data = [{\r\n        name: 'Name',\r\n        placeholder: '',\r\n        value: name,\r\n        onChange: onChangeName\r\n    },\r\n    {\r\n        name: 'Description',\r\n        placeholder: '',\r\n        value: description,\r\n        onChange: onChangeDescription\r\n    },\r\n    {\r\n        name: 'Ingredients',\r\n        placeholder: '',\r\n        value: ingredients,\r\n        onChange: onChangeIngredients\r\n    },\r\n    {\r\n        name: 'Quantity',\r\n        placeholder: '',\r\n        value: quantity,\r\n        onChange: onChangeQuantity\r\n    },\r\n    {\r\n        name: 'Is Vegan',\r\n        placeholder: '',\r\n        value: isVegan,\r\n        onChange: onChangeIsVegan\r\n    },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <p className={classes.title} >Add new Serving</p>\r\n            <div className={classes.formDiv} >\r\n                <FormDiv\r\n                    data={data}\r\n                    actionName='Create Serving'\r\n                    actionTaken={createServing}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewServingScreen\r\n"]},"metadata":{},"sourceType":"module"}