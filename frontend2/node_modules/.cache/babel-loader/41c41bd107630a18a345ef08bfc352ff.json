{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { restaurantsListReducer, restaurantServingsReducer } from '../reducers/restaurantReducer';\nimport { userReducer, userSignupReducer } from '../reducers/userReducer';\nconst reducer = combineReducers({\n  restaurantList: restaurantsListReducer,\n  userReducer: userReducer,\n  userSignup: userSignupReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userReducer: {\n    user: userInfoFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/app/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","restaurantsListReducer","restaurantServingsReducer","userReducer","userSignupReducer","reducer","restaurantList","userSignup","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","user","middleWare","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,sBAAT,EAAgCC,yBAAhC,QAAiE,+BAAjE;AACA,SAASC,WAAT,EAAqBC,iBAArB,QAA8C,yBAA9C;AAGA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC9BS,EAAAA,cAAc,EAAEL,sBADc;AAE9BE,EAAAA,WAAW,EAAEA,WAFiB;AAG9BI,EAAAA,UAAU,EAACH;AAHmB,CAAD,CAA/B;AAMA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMG,YAAY,GAAG;AACnBV,EAAAA,WAAW,EAAE;AACXW,IAAAA,IAAI,EAAGN;AADI;AADM,CAArB;AAMA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACS,OAAD,EAAUQ,YAAV,EACvBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CADI,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { restaurantsListReducer,restaurantServingsReducer } from '../reducers/restaurantReducer'\r\nimport { userReducer,userSignupReducer } from '../reducers/userReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  restaurantList: restaurantsListReducer,\r\n  userReducer: userReducer,\r\n  userSignup:userSignupReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n  userReducer :{\r\n    user : userInfoFromStorage\r\n  }\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}