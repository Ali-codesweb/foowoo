{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\restaurant\\\\PasswordChange.js\",\n    _s = $RefreshSig$();\n\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport React from 'react';\nimport TextFieldComp from '../../components/TextFieldComp';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PasswordChange() {\n  _s();\n\n  const [currentPassword, setCurrentPassword] = React.useState('');\n  const [newPassword, setNewPassword] = React.useState('');\n  const [newPasswordConfirm, setNewPasswordConfirm] = React.useState('');\n  const store = useSelector(state => {\n    var _state$userReducer, _state$userReducer2, _state$userReducer3, _state$userReducer3$u;\n\n    return ((_state$userReducer = state.userReducer) === null || _state$userReducer === void 0 ? void 0 : _state$userReducer.user) ? (_state$userReducer2 = state.userReducer) === null || _state$userReducer2 === void 0 ? void 0 : _state$userReducer2.user : (_state$userReducer3 = state.userReducer) === null || _state$userReducer3 === void 0 ? void 0 : (_state$userReducer3$u = _state$userReducer3.user) === null || _state$userReducer3$u === void 0 ? void 0 : _state$userReducer3$u.user;\n  });\n\n  const currentPasswordHandler = e => {\n    setCurrentPassword(e.target.value);\n  };\n\n  const newPasswordHandler = e => {\n    setNewPassword(e.target.value);\n  };\n\n  const newPasswordConfirmHandler = e => {\n    setNewPasswordConfirm(e.target.value);\n  };\n\n  const updatePassword = () => async () => {\n    if (newPassword != newPasswordConfirm) {\n      window.alert('Please confirm passwords properly ');\n      return;\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${URL}/api/restaurant/restaurant-password/update/`, {\n      current_password: currentPassword,\n      new_password: newPassword\n    }, config);\n    window.alert(data);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    main: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    title: { ...theme.typography.content,\n      textAlign: 'center',\n      fontSize: '2.5rem',\n      marginTop: '1rem',\n      marginBottom: '30px'\n    },\n    label: { ...theme.typography.title,\n      fontSize: '1.5rem'\n    },\n    btn: { ...theme.buttonDef\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n      class: classes.label,\n      name: \"Current Password: \",\n      textFieldDisable: false,\n      placeholder: 'Current password',\n      value: currentPassword,\n      onChange: currentPasswordHandler,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n      class: classes.label,\n      name: \"New Password: \",\n      textFieldDisable: false,\n      placeholder: 'New password',\n      value: newPassword,\n      onChange: newPasswordHandler,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextFieldComp, {\n      class: classes.label,\n      name: \"Confirm New Password: \",\n      textFieldDisable: false,\n      placeholder: 'Confirm new password',\n      value: newPasswordConfirm,\n      onChange: newPasswordConfirmHandler,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: classes.btn,\n      color: \"secondary\",\n      onClick: updatePassword,\n      type: \"submit\",\n      children: \" Update password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PasswordChange, \"59T+WRhqzbSadwNQmOWt+jUjzSs=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = PasswordChange;\nexport default PasswordChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/restaurant/PasswordChange.js"],"names":["Button","makeStyles","TextField","React","TextFieldComp","axios","useSelector","PasswordChange","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","store","state","userReducer","user","currentPasswordHandler","e","target","value","newPasswordHandler","newPasswordConfirmHandler","updatePassword","window","alert","config","headers","Authorization","token","data","put","URL","current_password","new_password","useStyles","theme","main","display","flexDirection","alignItems","title","typography","content","textAlign","fontSize","marginTop","marginBottom","label","btn","buttonDef","classes"],"mappings":"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","sourcesContent":["import { Button, makeStyles, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport TextFieldComp from '../../components/TextFieldComp'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction PasswordChange() {\r\n    const [currentPassword, setCurrentPassword] = React.useState('')\r\n    const [newPassword, setNewPassword] = React.useState('')\r\n    const [newPasswordConfirm, setNewPasswordConfirm] = React.useState('')\r\n    const store = useSelector(state=>state.userReducer?.user ? state.userReducer?.user : state.userReducer?.user?.user )\r\n\r\n    const currentPasswordHandler = (e) => {\r\n        setCurrentPassword(e.target.value)\r\n    }\r\n    const newPasswordHandler = (e) => {\r\n        setNewPassword(e.target.value)\r\n    }\r\n    const newPasswordConfirmHandler = (e) => {\r\n        setNewPasswordConfirm(e.target.value)\r\n    }\r\n\r\n    const updatePassword = ()=> async() => {\r\n        if (newPassword != newPasswordConfirm) {\r\n            window.alert('Please confirm passwords properly ')\r\n            return\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${URL}/api/restaurant/restaurant-password/update/`, {\r\n            current_password: currentPassword,\r\n            new_password: newPassword,\r\n\r\n        }, config)\r\n        window.alert(data)\r\n\r\n    }\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        main: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        },\r\n        title: {\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '2.5rem',\r\n            marginTop: '1rem',\r\n            marginBottom: '30px'\r\n        },\r\n        label: {\r\n            ...theme.typography.title,\r\n            fontSize: '1.5rem'\r\n        },\r\n        btn: {\r\n            ...theme.buttonDef\r\n        }\r\n    }))\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.main} >\r\n            <h1 className={classes.title} >Reset Password</h1>\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='Current Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'Current password'}\r\n                value={currentPassword}\r\n                onChange={currentPasswordHandler}\r\n                type='password'\r\n            />\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='New Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'New password'}\r\n                value={newPassword}\r\n                onChange={newPasswordHandler}\r\n                type='password'\r\n            />\r\n            <TextFieldComp\r\n                class={classes.label}\r\n                name='Confirm New Password: '\r\n                textFieldDisable={false}\r\n                placeholder={'Confirm new password'}\r\n                value={newPasswordConfirm}\r\n                onChange={newPasswordConfirmHandler}\r\n                type='password'\r\n            />\r\n            <Button variant='contained' className={classes.btn} color='secondary'\r\n                onClick={updatePassword} type='submit' > Update password </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordChange\r\n"]},"metadata":{},"sourceType":"module"}