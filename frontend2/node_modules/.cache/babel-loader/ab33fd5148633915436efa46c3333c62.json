{"ast":null,"code":"import { RESTAURANT_LIST_FAIL, RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_SERVINGS_REQUEST, RESTAURANT_SERVINGS_FAIL, RESTAURANT_SERVINGS_SUCCESS, RESTAURANT_SERVINGS_DETAILS_SUCCESS, RESTAURANT_SERVINGS_DETAILS_REQUEST, RESTAURANT_SERVINGS_DETAILS_FAIL } from '../constants/RestaurantConstants';\nimport axios from 'axios';\nconst URL = 'http://127.0.0.1:8000';\nexport const ListRestaurants = (url = URL + '/api/') => async dispatch => {\n  try {\n    dispatch({\n      type: RESTAURANT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(url);\n    dispatch({\n      type: RESTAURANT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: RESTAURANT_LIST_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const RestaurantServings = id => async dispatch => {\n  try {\n    dispatch({\n      type: RESTAURANT_SERVINGS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${URL}/api/restaurant/restaurant-servings/${id}`);\n    dispatch({\n      type: RESTAURANT_SERVINGS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: RESTAURANT_SERVINGS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const restLogin = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(URL + '/api/user/login/', {\n      'username': email,\n      'password': password,\n      config\n    });\n\n    if (!data.is_user) {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } else {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: 'You are registered as user. Please login as a User'\n      });\n      window.alert('You are registered as User. Please login as a User');\n    }\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: 'Invalid Credentials, please enter corrent email and password'\n    });\n  }\n};","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/actions/RestaurantActions.js"],"names":["RESTAURANT_LIST_FAIL","RESTAURANT_LIST_REQUEST","RESTAURANT_LIST_SUCCESS","RESTAURANT_SERVINGS_REQUEST","RESTAURANT_SERVINGS_FAIL","RESTAURANT_SERVINGS_SUCCESS","RESTAURANT_SERVINGS_DETAILS_SUCCESS","RESTAURANT_SERVINGS_DETAILS_REQUEST","RESTAURANT_SERVINGS_DETAILS_FAIL","axios","URL","ListRestaurants","url","dispatch","type","data","get","payload","err","message","RestaurantServings","id","config","headers","restLogin","email","password","USER_LOGIN_REQUEST","post","is_user","USER_LOGIN_SUCCESS","localStorage","setItem","JSON","stringify","USER_LOGIN_FAIL","window","alert"],"mappings":"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","sourcesContent":["import {\r\n    RESTAURANT_LIST_FAIL,\r\n    RESTAURANT_LIST_REQUEST,\r\n    RESTAURANT_LIST_SUCCESS,\r\n\r\n    RESTAURANT_SERVINGS_REQUEST,\r\n    RESTAURANT_SERVINGS_FAIL,\r\n    RESTAURANT_SERVINGS_SUCCESS,\r\n\r\n    RESTAURANT_SERVINGS_DETAILS_SUCCESS,\r\n    RESTAURANT_SERVINGS_DETAILS_REQUEST,\r\n    RESTAURANT_SERVINGS_DETAILS_FAIL\r\n\r\n} from '../constants/RestaurantConstants'\r\nimport axios from 'axios'\r\n\r\nconst URL = 'http://127.0.0.1:8000'\r\n\r\nexport const ListRestaurants = (url = URL + '/api/') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: RESTAURANT_LIST_REQUEST\r\n        })\r\n        const { data } = await axios.get(url)\r\n        dispatch({\r\n            type: RESTAURANT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESTAURANT_LIST_FAIL,\r\n            payload: err.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const RestaurantServings = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: RESTAURANT_SERVINGS_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${URL}/api/restaurant/restaurant-servings/${id}`)\r\n\r\n        dispatch({\r\n            type:RESTAURANT_SERVINGS_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type:RESTAURANT_SERVINGS_FAIL,\r\n            payload:err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const restLogin = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const { data } = await axios.post(URL + '/api/user/login/', {\r\n            'username': email,\r\n            'password': password,\r\n            config\r\n        })\r\n        if (!data.is_user) {\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } else {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: 'You are registered as user. Please login as a User'\r\n            })\r\n            window.alert('You are registered as User. Please login as a User')\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid Credentials, please enter corrent email and password'\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}