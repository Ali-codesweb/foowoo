{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full HTML\\\\Django-react\\\\foowoo\\\\frontend2\\\\src\\\\screens\\\\restaurant\\\\AddNewServingScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Input, Radio } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'axios';\nimport React from 'react';\nimport FormDiv from '../../components/FormDiv';\nimport { useSelector } from 'react-redux';\nimport TextFieldComp from '../../components/TextFieldComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewServingScreen() {\n  _s();\n\n  // Name,description,ingredients,image,quantity,is_vegan\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [ingredients, setIngredients] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [quantity, setQuantity] = React.useState('');\n  const [isVegan, setIsVegan] = React.useState(false);\n  const user = useSelector(state => state.user.userInfo);\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const onChangeIngredients = e => {\n    setIngredients(e.target.value);\n  };\n\n  const onChangeImage = e => {\n    setImage(e.target.value);\n  };\n\n  const onChangeQuantity = e => {\n    setQuantity(e.target.value);\n  };\n\n  const onChangeIsVegan = e => {\n    setIsVegan(!isVegan);\n  };\n\n  const createServing = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    const {\n      data\n    } = axios.post('http://127.0.0.1:8000/api/restaurant/create-serving', {\n      name,\n      description,\n      ingredients,\n      image,\n      quantity,\n      is_vegan: isVegan\n    }, config);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    title: { ...theme.typography.content,\n      textAlign: 'center',\n      fontSize: '2.5rem',\n      marginTop: '20px'\n    }\n  }));\n  const classes = useStyles();\n  const data = [{\n    name: 'Name',\n    placeholder: '',\n    value: name,\n    onChange: onChangeName\n  }, {\n    name: 'Description',\n    placeholder: '',\n    value: description,\n    onChange: onChangeDescription\n  }, {\n    name: 'Ingredients',\n    placeholder: '',\n    value: ingredients,\n    onChange: onChangeIngredients\n  }, {\n    name: 'Quantity',\n    placeholder: '',\n    value: quantity,\n    onChange: onChangeQuantity,\n    type: 'number'\n  }, {\n    name: 'Is Vegan',\n    placeholder: '',\n    value: isVegan,\n    onChange: onChangeIsVegan,\n    radio: 'radio'\n  }, {\n    name: 'Image',\n    placeholder: '',\n    value: image,\n    onChange: onChangeImage,\n    type: 'file'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.title,\n      children: \"Add new Serving\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormDiv, {\n      data: data,\n      actionName: \"Create Serving\",\n      actionTaken: createServing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewServingScreen, \"7esZmkewZC2xHAl0e6FEgrwzaR4=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = AddNewServingScreen;\nexport default AddNewServingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewServingScreen\");","map":{"version":3,"sources":["E:/Full HTML/Django-react/foowoo/frontend2/src/screens/restaurant/AddNewServingScreen.js"],"names":["Button","Input","Radio","makeStyles","axios","React","FormDiv","useSelector","TextFieldComp","AddNewServingScreen","name","setName","useState","description","setDescription","ingredients","setIngredients","image","setImage","quantity","setQuantity","isVegan","setIsVegan","user","state","userInfo","onChangeName","e","target","value","onChangeDescription","onChangeIngredients","onChangeImage","onChangeQuantity","onChangeIsVegan","createServing","config","headers","Authorization","token","data","post","is_vegan","useStyles","theme","title","typography","content","textAlign","fontSize","marginTop","classes","placeholder","onChange","type","radio","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { Button, Input, Radio } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport FormDiv from '../../components/FormDiv'\r\nimport { useSelector } from 'react-redux';\r\nimport TextFieldComp from '../../components/TextFieldComp'\r\n\r\nfunction AddNewServingScreen() {\r\n    // Name,description,ingredients,image,quantity,is_vegan\r\n    const [name, setName] = React.useState('')\r\n    const [description, setDescription] = React.useState('')\r\n    const [ingredients, setIngredients] = React.useState('')\r\n    const [image, setImage] = React.useState('')\r\n    const [quantity, setQuantity] = React.useState('')\r\n    const [isVegan, setIsVegan] = React.useState(false)\r\n\r\n    const user = useSelector(state=>state.user.userInfo)\r\n\r\n    const onChangeName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const onChangeDescription = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    const onChangeIngredients = (e) => {\r\n        setIngredients(e.target.value)\r\n    }\r\n    const onChangeImage = (e) => {\r\n        setImage(e.target.value)\r\n    }\r\n    const onChangeQuantity = (e) => {\r\n        setQuantity(e.target.value)\r\n    }\r\n    const onChangeIsVegan = (e) => {\r\n        setIsVegan(!isVegan)\r\n    }\r\n\r\n    const createServing = async () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user.token}`\r\n            }\r\n        }\r\n        const { data } = axios.post('http://127.0.0.1:8000/api/restaurant/create-serving', {\r\n            name,\r\n            description,\r\n            ingredients,\r\n            image,\r\n            quantity,\r\n            is_vegan: isVegan\r\n        },config)\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        title: {\r\n            ...theme.typography.content,\r\n            textAlign: 'center',\r\n            fontSize: '2.5rem',\r\n            marginTop: '20px'\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const data = [{\r\n        name: 'Name',\r\n        placeholder: '',\r\n        value: name,\r\n        onChange: onChangeName\r\n    },\r\n    {\r\n        name: 'Description',\r\n        placeholder: '',\r\n        value: description,\r\n        onChange: onChangeDescription\r\n    },\r\n    {\r\n        name: 'Ingredients',\r\n        placeholder: '',\r\n        value: ingredients,\r\n        onChange: onChangeIngredients\r\n    },\r\n    {\r\n        name: 'Quantity',\r\n        placeholder: '',\r\n        value: quantity,\r\n        onChange: onChangeQuantity,\r\n        type: 'number',\r\n    },\r\n    {\r\n        name: 'Is Vegan',\r\n        placeholder: '',\r\n        value: isVegan,\r\n        onChange: onChangeIsVegan,\r\n        radio: 'radio'\r\n    },\r\n    {\r\n        name: 'Image',\r\n        placeholder: '',\r\n        value: image,\r\n        onChange: onChangeImage,\r\n        type: 'file'\r\n    },\r\n    ]\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }} >\r\n            <p className={classes.title} >Add new Serving</p>\r\n\r\n            <FormDiv\r\n                data={data}\r\n                actionName='Create Serving'\r\n                actionTaken={createServing}\r\n            >\r\n            </FormDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewServingScreen\r\n"]},"metadata":{},"sourceType":"module"}